{#
/**
 * @file
 * Bartik's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
%}
{{ attach_library('classy/node') }}
{% set counter = 0 %}

<article{{ attributes.addClass(classes) }}>
    <header>


    </header>
    <div{{ content_attributes.addClass('node__content', 'clearfix') }}>
        <section class="wrapper section-top">
            <div class="section-top__left">
                <div class="section-top__pagination">
                  {% for key, field_item in content.field_chapters %}
                    {% if key matches '/^\\d+$/' %}
                      {% set counter = counter + 1 %}
                      Lesson {{ counter }} of {{ lesson }}
                      <i class="section-top__arrow"></i>
                </div>
                <h1 class="section-top__heading">{{ title }}</h1>
                <p class="section-top__para"> {{ field_item['#paragraph'].field_body.value|raw }}
                </p>
            </div>
            <div class="section-top__right">
                {% set file =  field_item['#paragraph'].field_image.entity %}
                {% set uri = file_url(file.uri.value) %}
                <img class="section-top__image" src="{{ uri }}" alt="image description">
            </div>
        </section>
        <!-- ======================  END SECTION TOP ========================== -->

        <!-- ======================  START SECTION ACCORDIAN ========================== -->
        <!-- THIS SCRIPT IS NEEDED TO TOGGLE  CLASS -->
        <script>
            function toggleClass(targetElement) {
                var sourceID = targetElement.getAttribute("data-toggle");
                document.getElementById(sourceID).classList.toggle("open");
            }
        </script>

        <section class="wrapper section-top">
             {% for index, accordion in field_item['#paragraph'].field_accordion %}
               {% if index matches '/^\\d+$/' %}
            <div class="accordian open" id="accordianOne">
                <div class="accordian__head" onclick="toggleClass(this)" data-toggle="accordianOne">
                    <div class="accordian__link">
                        <span class="accordian__arrow"></span>
                       {{ accordion.entity.field_accoridian_title.value|raw }}
                    </div>
                </div>
                <div class="accordian__body">
                    <div class="accordian__content">
                        <p class="accordian__para">
                            {{ accordion.entity.field_description.value|raw}}
                        </p>
                       
                    </div>
                </div>
            </div>
            {% endif %}
            {% endfor %}
        <section class="wrapper d-block">
        <h2 class="d-block__heading">A Definition</h2>
        <p class="d-block__para"> {{ field_item['#paragraph'].field_definition.value|raw }} </p>
    </section>

    <!-- ======================  END SECTION BLOCK  ========================== -->



    <!-- ======================  START SECTION BLOCK WITH IMAGE ========================== -->
    <section class="wrapper d-block">
        <h2 class="d-block__heading">Your Role</h2>
        <p class="d-block__para"> {{ field_item['#paragraph'].field_role.value|raw }} </p>
    </section>
            {% endif %}
            {% endfor %}
        </section>
    </div>




</article>

<style> 
    * {
    box-sizing: border-box;
}

.wrapper {
    max-width: 1024px;
    margin: 0 auto;
}

/* ======================  START SECTION TOP ==========================  */
.section-top:after {
    content: '';
    clear: both;
    display: block;
}

.section-top__left {
    float: left;
    padding-top: 40px;
    width: 60%;
}

.section-top__arrow {
    border-top: 5px solid transparent;
    border-left: 10px solid #736b6b;
    border-bottom: 5px solid transparent;
    height: 0;
    position: absolute;
    right: 0;
    top: 3px;
    width: 0;
}

.section-top__right {
    float: left;
    width: 40%;
}

.section-top__image {
    display: block;
    width: 100%;
}

.section-top__pagination {
    color: #736b6b;
    display: inline-block;
    margin: 0 0 15px 0;
    position: relative;
    padding-right: 20px;
}

.section-top__heading {
    color: #313131;
    font-size: 42px;
    margin: 0 0 15px 0;

}

.section-top__para {
    color: #736b6b;
    margin: 0 0 15px 0;
}

/* ======================  END SECTION TOP ==========================  */

/* ======================  START SECTION ACCORDIAN ==========================  */

.accordian {
    margin-bottom: 25px;
}

.accordian__head {
    background-color: #31639c;
    cursor: pointer;
    color: #fff;
    padding: 15px 20px;
}

.accordian__link {
    position: relative;
    padding-left: 20px;
}

.accordian__arrow {
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-bottom: 8px solid #fff;
    border-top: 0;
    height: 0px;
    left: 0;
    position: absolute;
    top: 3px;
    width: 0px;
}

.accordian.open .accordian__arrow {
    height: 0px;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 8px solid #fff;
    border-bottom: 0;
    width: 0px;
}

.accordian__body {
    background-color: #e7eff7;
    max-height: 0;
    overflow: hidden;
    transition: max-height .3s ease;
}

.accordian.open .accordian__body {
    max-height: 20000px;
}

.accordian__content {
    padding: 20px;
}

.accordian__para {
    color: #313131;
    margin: 0 0 15px 0;
}

/* ======================  END SECTION ACCORDIAN ==========================  */

/* ======================  START SECTION BLOCK ==========================  */
.d-block {
    margin-bottom: 25px;
}

.d-block__heading {
    font-size: 30px;
    border-bottom: 5px solid #a51818;
    padding: 0 0 10px 0;
    margin: 0 0 15px 0;
}

.d-block__para {
    color: #313131;
    margin: 0 0 15px 0;
}

.d-block__image-heading {
    font-size: 20px;
    font-weight: normal;
    margin: 0 0 15px 0;
}


/* IMAGE BLOCK */
.d-block__image-wrapper {
    text-align: center;
}

.d-block__image {
    display: inline-block;
    max-width: 100%;
}

/* TABLE BLOCK */
.d-block__table {
    width: 100%;
    border-collapse: collapse;
    border: 1px solid black;
}

.d-block__table-th {
    border: 1px solid black;
    background-color: #def7ff;
    font-weight: normal;
    padding: 15px;
    width: 33.3333%;

}

.d-block__table-td {
    border: 1px solid black;
    padding: 15px;
}

.d-block__table-italic {
    font-weight: bold;
}


/* ======================  END SECTION BLOCK ==========================  */


/* ======================  START CARD BLOCK ==========================  */


.d-block__head {
    position: relative;
}
.d-block__heading--image {
    padding-right: 150px;
}

.d-block__heading-image {
    position: absolute;
    right: 0;
    width: 75px;
    top: 0;
}

.d-block__heading-image>img {
    display: block;
    max-width: 100%;
}

.card {
    float: left;
    padding-right: 30px;
}

.card--one-third {
    width: 33.3333333%;
}

.card__type {
    text-transform: uppercase;
    color: #736b6b;
    font-size: 10px;
    margin-bottom: 5px;
}

.card__image-wrapper {
    border: 1px solid #eaeaea;
    border-radius: 5px;
    margin-bottom: 15px;
}

.card__image {
    display: block;
    max-width: 100%;
}

.card__detail {
    margin: 0 0 15px 0;
    color: #313131;
}

.card__timestamp:after {
    content: '';
    display: block;
    clear: both;
}

.card__time {
    float: left;
    padding: 0 20px;
    color: #94adc6;
    position: relative;
}

.card__time-image {
    position: absolute;
    left: 0;
}

.card__date {
    float: left;
    color: #736b6b;
    text-transform: uppercase;
}

/* ======================  END CARD BLOCK ==========================  */
</style>
